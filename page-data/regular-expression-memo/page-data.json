{"componentChunkName":"component---src-templates-blog-post-js","path":"/regular-expression-memo/","result":{"data":{"site":{"siteMetadata":{"title":"Coyeah's Blog","siteUrl":"https://www.coyeah.top"}},"markdownRemark":{"id":"1fe198df-063b-583f-bbf3-3c0be105c229","excerpt":"创建正则表达式的两种方式： var expression = / pattern / flags; 使用正则表达式字面量： 调用 RegExp 对象的构造函数： 标志 (flags) g: 表示全局 (global) 模式 i: 表示不区分大小写 (case-insensitive) 模式 m…","html":"<p>创建正则表达式的两种方式：</p>\n<blockquote>\n<p>var expression = / pattern / flags;</p>\n</blockquote>\n<ul>\n<li>使用正则表达式字面量：<code class=\"language-text\">var pattern = /[bc]at/g;</code></li>\n<li>调用 RegExp 对象的构造函数：<code class=\"language-text\">var pattern = new RegExp(&quot;[bc]at&quot;, &quot;i&quot;);</code></li>\n</ul>\n<h2>标志 (flags)</h2>\n<ul>\n<li>g: 表示全局 (global) 模式</li>\n<li>i: 表示不区分大小写 (case-insensitive) 模式</li>\n<li>m: 表示多行 (multiline) 模式</li>\n</ul>\n<h2>什么时候使用构造函数</h2>\n<p>当正则表达式的模式会变发生改变，或者需要从其他地方得到时（例如用户输入），适合使用构造函数的方式。</p>\n<h2>匹配字符表</h2>\n<ul>\n<li><code class=\"language-text\">\\</code>: 将其后的特殊字符转义为字面量</li>\n<li><code class=\"language-text\">^</code>: 匹配输入的开始</li>\n<li><code class=\"language-text\">$</code>: 匹配输入的结束</li>\n<li><code class=\"language-text\">*</code>: 匹配前一个表达式0次或者多次，等价于 {0,}</li>\n<li><code class=\"language-text\">+</code>: 匹配前一个表达式1次或多次，等价于 {1,}</li>\n<li><code class=\"language-text\">?</code>: 匹配前一个表达式0次或者1次，等价于 {0,1}</li>\n<li><code class=\"language-text\">.</code>: 匹配除了换行符（\\n）之外的任何单个字符</li>\n<li><code class=\"language-text\">(x)</code>: 匹配 ‘x’ 并记住匹配项</li>\n<li><code class=\"language-text\">(?:x)</code>: 匹配 ‘x’ 但不记住匹配项</li>\n<li><code class=\"language-text\">x(?=y)</code>: 匹配 ‘x’ 并且 ‘x’ 后面跟着 ‘y’，也叫作正向肯定查找</li>\n<li><code class=\"language-text\">x(?!y)</code>: 匹配 ‘x’ 并且 ‘x’ 后面不跟着 ‘y’，也叫作正向否定查找</li>\n<li><code class=\"language-text\">x | y</code>: 匹配 ‘x’ 或者 ‘y’</li>\n<li><code class=\"language-text\">{n}</code>: 匹配前一个字符 n 次</li>\n<li><code class=\"language-text\">{n, m}</code>: 匹配前一个字符最少 n 次</li>\n<li><code class=\"language-text\">[xyz]</code>: 匹配括号中的任意一个字符，可以使用<code class=\"language-text\">-</code>指定范围</li>\n<li><code class=\"language-text\">\\b</code>: 匹配一个词的边界</li>\n<li><code class=\"language-text\">\\B</code>: 匹配非单词边界</li>\n<li><code class=\"language-text\">\\d</code>: 匹配一个数字</li>\n<li><code class=\"language-text\">\\D</code>: 匹配一个非数字字符，等价于 [^0-9]</li>\n<li><code class=\"language-text\">\\f</code>: 匹配一个换页符</li>\n<li><code class=\"language-text\">\\n</code>: 匹配一个换行符</li>\n<li><code class=\"language-text\">\\r</code>: 匹配一个回车符</li>\n<li><code class=\"language-text\">\\s</code>: 匹配一个空白字符</li>\n<li><code class=\"language-text\">\\S</code>: 匹配一个非空白字符</li>\n<li><code class=\"language-text\">\\t</code>: 匹配一个水平制表符</li>\n<li><code class=\"language-text\">\\v</code>: 匹配一个垂直制表符</li>\n<li><code class=\"language-text\">\\w</code>: 匹配一个单字字符，等价于 [A-Za-z0-9_]</li>\n<li><code class=\"language-text\">\\W</code>: 匹配一个非单字字符，等价于 [^A-Za-z0-9_]</li>\n</ul>","frontmatter":{"title":"正则表达式备忘录","date":"April 23, 2018","description":null}},"previous":null,"next":{"fields":{"slug":"/css-layout-holy-grail-and-flex/"},"frontmatter":{"title":"CSS布局：圣杯与flex"}}},"pageContext":{"id":"1fe198df-063b-583f-bbf3-3c0be105c229","previousPostId":null,"nextPostId":"1f72d5e4-b972-5868-993f-807b05d78ad1"}},"staticQueryHashes":["2841359383","3274528899","4152100472"]}